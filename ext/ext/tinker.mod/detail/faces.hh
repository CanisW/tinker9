#ifndef TINKER_MOD_FACES_HH_
#define TINKER_MOD_FACES_HH_

#include "util/macro.h"

TINKER_NAMESPACE_BEGIN namespace faces {
extern int& maxcls;
extern int& maxtt;
extern int& maxt;
extern int& maxp;
extern int& maxv;
extern int& maxen;
extern int& maxfn;
extern int& maxc;
extern int& maxep;
extern int& maxfs;
extern int& maxcy;
extern int& mxcyep;
extern int& maxfp;
extern int& mxfpcy;
extern int& na;
extern double& pr;
extern double*& ar;
extern double*& axyz;
extern int*& skip;
extern int*& nosurf;
extern int*& afree;
extern int*& abur;
extern int*& cls;
extern int*& clst;
extern int*& acls;
extern int& ntt;
extern int*& ttfe;
extern int*& ttle;
extern int*& enext;
extern int*& tta;
extern int*& ttbur;
extern int*& ttfree;
extern int& nt;
extern int*& tfe;
extern int*& ta;
extern double*& tr;
extern double*& t;
extern double*& tax;
extern int*& tfree;
extern int& np;
extern int*& pa;
extern double*& p;
extern int& nv;
extern int*& va;
extern int*& vp;
extern double*& vxyz;
extern int& nen;
extern int& nfn;
extern int*& env;
extern int*& fnen;
extern int& nc;
extern int*& ca;
extern int*& ct;
extern double*& cr;
extern double*& c;
extern int& nep;
extern int*& epc;
extern int*& epv;
extern int*& afe;
extern int*& ale;
extern int*& epnext;
extern int& nfs;
extern int*& fsen;
extern int*& fsep;
extern int& ncy;
extern int*& cynep;
extern int*& cyep;
extern int& nfp;
extern int*& fpa;
extern int*& fpncy;
extern int*& fpcy;

#ifdef TINKER_MOD_CPP_
extern "C" int m_tinker_mod(faces, maxcls);
extern "C" int m_tinker_mod(faces, maxtt);
extern "C" int m_tinker_mod(faces, maxt);
extern "C" int m_tinker_mod(faces, maxp);
extern "C" int m_tinker_mod(faces, maxv);
extern "C" int m_tinker_mod(faces, maxen);
extern "C" int m_tinker_mod(faces, maxfn);
extern "C" int m_tinker_mod(faces, maxc);
extern "C" int m_tinker_mod(faces, maxep);
extern "C" int m_tinker_mod(faces, maxfs);
extern "C" int m_tinker_mod(faces, maxcy);
extern "C" int m_tinker_mod(faces, mxcyep);
extern "C" int m_tinker_mod(faces, maxfp);
extern "C" int m_tinker_mod(faces, mxfpcy);
extern "C" int m_tinker_mod(faces, na);
extern "C" double m_tinker_mod(faces, pr);
extern "C" double* m_tinker_mod(faces, ar);
extern "C" double* m_tinker_mod(faces, axyz);
extern "C" int* m_tinker_mod(faces, skip);
extern "C" int* m_tinker_mod(faces, nosurf);
extern "C" int* m_tinker_mod(faces, afree);
extern "C" int* m_tinker_mod(faces, abur);
extern "C" int* m_tinker_mod(faces, cls);
extern "C" int* m_tinker_mod(faces, clst);
extern "C" int* m_tinker_mod(faces, acls);
extern "C" int m_tinker_mod(faces, ntt);
extern "C" int* m_tinker_mod(faces, ttfe);
extern "C" int* m_tinker_mod(faces, ttle);
extern "C" int* m_tinker_mod(faces, enext);
extern "C" int* m_tinker_mod(faces, tta);
extern "C" int* m_tinker_mod(faces, ttbur);
extern "C" int* m_tinker_mod(faces, ttfree);
extern "C" int m_tinker_mod(faces, nt);
extern "C" int* m_tinker_mod(faces, tfe);
extern "C" int* m_tinker_mod(faces, ta);
extern "C" double* m_tinker_mod(faces, tr);
extern "C" double* m_tinker_mod(faces, t);
extern "C" double* m_tinker_mod(faces, tax);
extern "C" int* m_tinker_mod(faces, tfree);
extern "C" int m_tinker_mod(faces, np);
extern "C" int* m_tinker_mod(faces, pa);
extern "C" double* m_tinker_mod(faces, p);
extern "C" int m_tinker_mod(faces, nv);
extern "C" int* m_tinker_mod(faces, va);
extern "C" int* m_tinker_mod(faces, vp);
extern "C" double* m_tinker_mod(faces, vxyz);
extern "C" int m_tinker_mod(faces, nen);
extern "C" int m_tinker_mod(faces, nfn);
extern "C" int* m_tinker_mod(faces, env);
extern "C" int* m_tinker_mod(faces, fnen);
extern "C" int m_tinker_mod(faces, nc);
extern "C" int* m_tinker_mod(faces, ca);
extern "C" int* m_tinker_mod(faces, ct);
extern "C" double* m_tinker_mod(faces, cr);
extern "C" double* m_tinker_mod(faces, c);
extern "C" int m_tinker_mod(faces, nep);
extern "C" int* m_tinker_mod(faces, epc);
extern "C" int* m_tinker_mod(faces, epv);
extern "C" int* m_tinker_mod(faces, afe);
extern "C" int* m_tinker_mod(faces, ale);
extern "C" int* m_tinker_mod(faces, epnext);
extern "C" int m_tinker_mod(faces, nfs);
extern "C" int* m_tinker_mod(faces, fsen);
extern "C" int* m_tinker_mod(faces, fsep);
extern "C" int m_tinker_mod(faces, ncy);
extern "C" int* m_tinker_mod(faces, cynep);
extern "C" int* m_tinker_mod(faces, cyep);
extern "C" int m_tinker_mod(faces, nfp);
extern "C" int* m_tinker_mod(faces, fpa);
extern "C" int* m_tinker_mod(faces, fpncy);
extern "C" int* m_tinker_mod(faces, fpcy);

int& maxcls = m_tinker_mod(faces, maxcls);
int& maxtt = m_tinker_mod(faces, maxtt);
int& maxt = m_tinker_mod(faces, maxt);
int& maxp = m_tinker_mod(faces, maxp);
int& maxv = m_tinker_mod(faces, maxv);
int& maxen = m_tinker_mod(faces, maxen);
int& maxfn = m_tinker_mod(faces, maxfn);
int& maxc = m_tinker_mod(faces, maxc);
int& maxep = m_tinker_mod(faces, maxep);
int& maxfs = m_tinker_mod(faces, maxfs);
int& maxcy = m_tinker_mod(faces, maxcy);
int& mxcyep = m_tinker_mod(faces, mxcyep);
int& maxfp = m_tinker_mod(faces, maxfp);
int& mxfpcy = m_tinker_mod(faces, mxfpcy);
int& na = m_tinker_mod(faces, na);
double& pr = m_tinker_mod(faces, pr);
double*& ar = m_tinker_mod(faces, ar);
double*& axyz = m_tinker_mod(faces, axyz);
int*& skip = m_tinker_mod(faces, skip);
int*& nosurf = m_tinker_mod(faces, nosurf);
int*& afree = m_tinker_mod(faces, afree);
int*& abur = m_tinker_mod(faces, abur);
int*& cls = m_tinker_mod(faces, cls);
int*& clst = m_tinker_mod(faces, clst);
int*& acls = m_tinker_mod(faces, acls);
int& ntt = m_tinker_mod(faces, ntt);
int*& ttfe = m_tinker_mod(faces, ttfe);
int*& ttle = m_tinker_mod(faces, ttle);
int*& enext = m_tinker_mod(faces, enext);
int*& tta = m_tinker_mod(faces, tta);
int*& ttbur = m_tinker_mod(faces, ttbur);
int*& ttfree = m_tinker_mod(faces, ttfree);
int& nt = m_tinker_mod(faces, nt);
int*& tfe = m_tinker_mod(faces, tfe);
int*& ta = m_tinker_mod(faces, ta);
double*& tr = m_tinker_mod(faces, tr);
double*& t = m_tinker_mod(faces, t);
double*& tax = m_tinker_mod(faces, tax);
int*& tfree = m_tinker_mod(faces, tfree);
int& np = m_tinker_mod(faces, np);
int*& pa = m_tinker_mod(faces, pa);
double*& p = m_tinker_mod(faces, p);
int& nv = m_tinker_mod(faces, nv);
int*& va = m_tinker_mod(faces, va);
int*& vp = m_tinker_mod(faces, vp);
double*& vxyz = m_tinker_mod(faces, vxyz);
int& nen = m_tinker_mod(faces, nen);
int& nfn = m_tinker_mod(faces, nfn);
int*& env = m_tinker_mod(faces, env);
int*& fnen = m_tinker_mod(faces, fnen);
int& nc = m_tinker_mod(faces, nc);
int*& ca = m_tinker_mod(faces, ca);
int*& ct = m_tinker_mod(faces, ct);
double*& cr = m_tinker_mod(faces, cr);
double*& c = m_tinker_mod(faces, c);
int& nep = m_tinker_mod(faces, nep);
int*& epc = m_tinker_mod(faces, epc);
int*& epv = m_tinker_mod(faces, epv);
int*& afe = m_tinker_mod(faces, afe);
int*& ale = m_tinker_mod(faces, ale);
int*& epnext = m_tinker_mod(faces, epnext);
int& nfs = m_tinker_mod(faces, nfs);
int*& fsen = m_tinker_mod(faces, fsen);
int*& fsep = m_tinker_mod(faces, fsep);
int& ncy = m_tinker_mod(faces, ncy);
int*& cynep = m_tinker_mod(faces, cynep);
int*& cyep = m_tinker_mod(faces, cyep);
int& nfp = m_tinker_mod(faces, nfp);
int*& fpa = m_tinker_mod(faces, fpa);
int*& fpncy = m_tinker_mod(faces, fpncy);
int*& fpcy = m_tinker_mod(faces, fpcy);
#endif

} TINKER_NAMESPACE_END

#endif
