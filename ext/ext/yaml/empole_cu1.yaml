KERNEL_NAME: empole_cu1
TEMPLATE_PARAMS: template<class Ver, class ETYP>
CONSTEXPR_FLAGS: |
  constexpr bool do_e = Ver::e;
  constexpr bool do_a = Ver::a;
  constexpr bool do_g = Ver::g;
  constexpr bool do_v = Ver::v;

COUNT:
  - nem
ENERGY:
  - em
VIRIAL:
  - vem
GRADIENT:
  - gx
  - gy
  - gz

# CUT_DISTANCE:
OFF_DISTANCE:
  - 'off'

EXCLUDE_INFO:
  - mdpuinfo

SCALE_1X_TYPE: real4_const_array,0

EXTRA_PARAMS: |
  , real* restrict trqx, real* restrict trqy, real* restrict trqz
  , const real (*restrict rpole)[10]
  , real f, real aewald

I_POSITION:
  - def: shared real xi from:x
  - def: shared real yi from:y
  - def: shared real zi from:z
K_POSITION:
  - def: register real xk from:x
  - def: register real yk from:y
  - def: register real zk from:z

I_FORCE:
  - def: shared real frcxi addto:gx
  - def: shared real frcyi addto:gy
  - def: shared real frczi addto:gz
  - def: shared real trqxi addto:trqx
  - def: shared real trqyi addto:trqy
  - def: shared real trqzi addto:trqz
K_FORCE:
  - def: register real frcxk addto:gx
  - def: register real frcyk addto:gy
  - def: register real frczk addto:gz
  - def: register real trqxk addto:trqx
  - def: register real trqyk addto:trqy
  - def: register real trqzk addto:trqz

I_VARIABLES:
  - def: shared real ci   from:rpole,MPL_PME_0
  - def: shared real dix  from:rpole,MPL_PME_X
  - def: shared real diy  from:rpole,MPL_PME_Y
  - def: shared real diz  from:rpole,MPL_PME_Z
  - def: shared real qixx from:rpole,MPL_PME_XX
  - def: shared real qixy from:rpole,MPL_PME_XY
  - def: shared real qixz from:rpole,MPL_PME_XZ
  - def: shared real qiyy from:rpole,MPL_PME_YY
  - def: shared real qiyz from:rpole,MPL_PME_YZ
  - def: shared real qizz from:rpole,MPL_PME_ZZ
K_VARIABLES:
  - def: register real ck   from:rpole,MPL_PME_0
  - def: register real dkx  from:rpole,MPL_PME_X
  - def: register real dky  from:rpole,MPL_PME_Y
  - def: register real dkz  from:rpole,MPL_PME_Z
  - def: register real qkxx from:rpole,MPL_PME_XX
  - def: register real qkxy from:rpole,MPL_PME_XY
  - def: register real qkxz from:rpole,MPL_PME_XZ
  - def: register real qkyy from:rpole,MPL_PME_YY
  - def: register real qkyz from:rpole,MPL_PME_YZ
  - def: register real qkzz from:rpole,MPL_PME_ZZ

SCALED_PAIRWISE_INTERACTION: |
  real xr = xk - @xi@;
  real yr = yk - @yi@;
  real zr = zk - @zi@;
  real r2 = image2(xr, yr, zr);
  if (r2 <= off * off and incl) {
    real e, vxx, vyx, vzx, vyy, vzy, vzz;
    real e1, vxx1, vyx1, vzx1, vyy1, vzy1, vzz1;
    pair_mpole_v2<Ver, ETYP>(
      r2, xr, yr, zr, 1,
      @ci@, @dix@, @diy@, @diz@, @qixx@, @qixy@, @qixz@, @qiyy@, @qiyz@, @qizz@,
      ck, dkx, dky, dkz, qkxx, qkxy, qkxz, qkyy, qkyz, qkzz,
      f, aewald,
      @frcxi@, @frcyi@, @frczi@, frcxk, frcyk, frczk,
      @trqxi@, @trqyi@, @trqzi@, trqxk, trqyk, trqzk,
      e, vxx, vyx, vzx, vyy, vzy, vzz);
    pair_mpole_v2<Ver, NON_EWALD>(
      r2, xr, yr, zr, scalea - 1,
      @ci@, @dix@, @diy@, @diz@, @qixx@, @qixy@, @qixz@, @qiyy@, @qiyz@, @qizz@,
      ck, dkx, dky, dkz, qkxx, qkxy, qkxz, qkyy, qkyz, qkzz,
      f, aewald,
      @frcxi@, @frcyi@, @frczi@, frcxk, frcyk, frczk,
      @trqxi@, @trqyi@, @trqzi@, trqxk, trqyk, trqzk,
      e1, vxx1, vyx1, vzx1, vyy1, vzy1, vzz1);
    if CONSTEXPR (do_e) {
      e = e + e1;
      emtl += floatTo<ebuf_prec>(e);
      if CONSTEXPR (do_a) {
        if (scalea != 0 and e != 0)
          nemtl += 1;
      }
    }
    if CONSTEXPR (do_v) {
      vemtlxx += floatTo<vbuf_prec>(vxx + vxx1);
      vemtlyx += floatTo<vbuf_prec>(vyx + vyx1);
      vemtlzx += floatTo<vbuf_prec>(vzx + vzx1);
      vemtlyy += floatTo<vbuf_prec>(vyy + vyy1);
      vemtlzy += floatTo<vbuf_prec>(vzy + vzy1);
      vemtlzz += floatTo<vbuf_prec>(vzz + vzz1);
    }
  } // end if (include)

FULL_PAIRWISE_INTERACTION: |
  real xr = xk - @xi@;
  real yr = yk - @yi@;
  real zr = zk - @zi@;
  real r2 = image2(xr, yr, zr);
  if (r2 <= off * off and incl) {
    real e, vxx, vyx, vzx, vyy, vzy, vzz;
    pair_mpole_v2<Ver, ETYP>(
      r2, xr, yr, zr, 1,
      @ci@, @dix@, @diy@, @diz@, @qixx@, @qixy@, @qixz@, @qiyy@, @qiyz@, @qizz@,
      ck, dkx, dky, dkz, qkxx, qkxy, qkxz, qkyy, qkyz, qkzz,
      f, aewald,
      @frcxi@, @frcyi@, @frczi@, frcxk, frcyk, frczk,
      @trqxi@, @trqyi@, @trqzi@, trqxk, trqyk, trqzk,
      e, vxx, vyx, vzx, vyy, vzy, vzz);
    if CONSTEXPR (do_e) {
      emtl += floatTo<ebuf_prec>(e);
      if CONSTEXPR (do_a) {
        if (e != 0)
          nemtl += 1;
      }
    }
    if CONSTEXPR (do_v) {
      vemtlxx += floatTo<vbuf_prec>(vxx);
      vemtlyx += floatTo<vbuf_prec>(vyx);
      vemtlzx += floatTo<vbuf_prec>(vzx);
      vemtlyy += floatTo<vbuf_prec>(vyy);
      vemtlzy += floatTo<vbuf_prec>(vzy);
      vemtlzz += floatTo<vbuf_prec>(vzz);
    }
  } // end if (include)
