OUTPUT_DIR: src/cu/hippo
KERNEL_NAME: dexpol_cu1
TEMPLATE_PARAMS: template<class Ver>
CONSTEXPR_FLAGS: |
  constexpr bool do_g = Ver::g;
  constexpr bool do_v = Ver::v;

VIRIAL:
  - vep
GRADIENT:
  - gx
  - gy
  - gz

CUT_DISTANCE: cut
OFF_DISTANCE: 'off'

EXCLUDE_INFO: dinfo
SCALE_1X_TYPE: real3_const_array,1

EXTRA_PARAMS: |
  , const real* restrict polarity, const real (*restrict uind)[3]
  , const real* restrict kpep, const real* restrict prepep
  , const real* restrict dmppep, const int* restrict lpep
  , ExpolScr scrtyp, real f
# IMPLICIT_PARAMS:

I_VARIABLES:
  - shared real xi      from:x
  - shared real yi      from:y
  - shared real zi      from:z
  - shared real uix     from:uind,0
  - shared real uiy     from:uind,1
  - shared real uiz     from:uind,2
  - shared real springi from:kpep
  - shared real sizi    from:prepep
  - shared real alphai  from:dmppep
  - shared int  epli    from:lpep
  - shared real poli    from:polarity
K_VARIABLES:
  - shared real xk        from:x
  - shared real yk        from:y
  - shared real zk        from:z
  - register real ukx     from:uind,0
  - register real uky     from:uind,1
  - register real ukz     from:uind,2
  - register real springk from:kpep
  - register real sizk    from:prepep
  - register real alphak  from:dmppep
  - register int  eplk    from:lpep
  - register real polk    from:polarity
I_FORCE:
  - register real frcxi addto:gx
  - register real frcyi addto:gy
  - register real frczi addto:gz
K_FORCE:
  - register real frcxk addto:gx
  - register real frcyk addto:gy
  - register real frczk addto:gz

FULL_PAIRWISE_INTERACTION: |
  real xr = @xk@ - @xi@;
  real yr = @yk@ - @yi@;
  real zr = @zk@ - @zi@;
  real r2 = image2(xr, yr, zr);
  if ((@eplk@ or @epli@) and r2 <= off * off and incl) {
    real r = REAL_SQRT(r2);
    real frc[3];
    pair_dexpol(scrtyp, r, scaleb, cut, off, xr, yr, zr, @uix@, @uiy@, @uiz@, @ukx@, @uky@, @ukz@,
               @springi@/@poli@, @sizi@, @alphai@, @springk@/@polk@, @sizk@, @alphak@, f, frc);
    @frcxi@ += frc[0];
    @frcyi@ += frc[1];
    @frczi@ += frc[2];
    @frcxk@ -= frc[0];
    @frcyk@ -= frc[1];
    @frczk@ -= frc[2];

    if CONSTEXPR (do_v) {
      real vxx = -xr * frc[0];
      real vxy = -0.5f * (yr * frc[0] + xr * frc[1]);
      real vxz = -0.5f * (zr * frc[0] + xr * frc[2]);
      real vyy = -yr * frc[1];
      real vyz = -0.5f * (zr * frc[1] + yr * frc[2]);
      real vzz = -zr * frc[2];
      veptlxx += floatTo<vbuf_prec>(vxx);
      veptlyx += floatTo<vbuf_prec>(vxy);
      veptlzx += floatTo<vbuf_prec>(vxz);
      veptlyy += floatTo<vbuf_prec>(vyy);
      veptlzy += floatTo<vbuf_prec>(vyz);
      veptlzz += floatTo<vbuf_prec>(vzz);
    }
  }
