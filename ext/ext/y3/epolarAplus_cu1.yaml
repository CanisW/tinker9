OUTPUT_DIR: src/cu/aplus
KERNEL_NAME: epolarAplus_cu1
TEMPLATE_PARAMS: template <class Ver, class ETYP, bool CFLX>
CONSTEXPR_FLAGS: |
  constexpr bool do_e = Ver::e;
  constexpr bool do_a = Ver::a;
  constexpr bool do_g = Ver::g;
  constexpr bool do_v = Ver::v;

COUNT:
  - nep
ENERGY:
  - ep
VIRIAL:
  - vep
GRADIENT:
  - gx
  - gy
  - gz

#CUT_DISTANCE:
OFF_DISTANCE: 'off'

EXCLUDE_INFO: mdpuinfo
SCALE_1X_TYPE: real4_const_array,2,3

EXTRA_PARAMS: |
  , real(*restrict ufld)[3]
  , real(*restrict dufld)[6]
  , const real(*restrict uind)[3]
  , real *restrict pot
  , const real(*restrict rpole)[10]
  , const real *restrict pdamp
  , const real *restrict thole
  , const real* restrict dirdamp
  , real aewald, real f
# IMPLICIT_PARAMS:

I_VARIABLES:
  - shared real xi   from:x
  - shared real yi   from:y
  - shared real zi   from:z
  - shared real ci   from:rpole,MPL_PME_0
  - shared real dix  from:rpole,MPL_PME_X
  - shared real diy  from:rpole,MPL_PME_Y
  - shared real diz  from:rpole,MPL_PME_Z
  - shared real qixx from:rpole,MPL_PME_XX
  - shared real qixy from:rpole,MPL_PME_XY
  - shared real qixz from:rpole,MPL_PME_XZ
  - shared real qiyy from:rpole,MPL_PME_YY
  - shared real qiyz from:rpole,MPL_PME_YZ
  - shared real qizz from:rpole,MPL_PME_ZZ
  - shared real uix  from:uind,0
  - shared real uiy  from:uind,1
  - shared real uiz  from:uind,2
  - shared real pdi  from:pdamp
  - shared real pti  from:thole
  - shared real ddi  from:dirdamp
K_VARIABLES:
  - shared   real xk   from:x
  - shared   real yk   from:y
  - shared   real zk   from:z
  - shared   real ck   from:rpole,MPL_PME_0
  - shared   real dkx  from:rpole,MPL_PME_X
  - shared   real dky  from:rpole,MPL_PME_Y
  - shared   real dkz  from:rpole,MPL_PME_Z
  - shared   real qkxx from:rpole,MPL_PME_XX
  - shared   real qkxy from:rpole,MPL_PME_XY
  - shared   real qkxz from:rpole,MPL_PME_XZ
  - shared   real qkyy from:rpole,MPL_PME_YY
  - shared   real qkyz from:rpole,MPL_PME_YZ
  - shared   real qkzz from:rpole,MPL_PME_ZZ
  - register real ukx  from:uind,0
  - register real uky  from:uind,1
  - register real ukz  from:uind,2
  - register real pdk  from:pdamp
  - register real ptk  from:thole
  - register real ddk  from:dirdamp
I_FORCE:
  - register real frcxi   addto:gx
  - register real frcyi   addto:gy
  - register real frczi   addto:gz
  - register real ufld0i  addto:ufld,0
  - register real ufld1i  addto:ufld,1
  - register real ufld2i  addto:ufld,2
  - register real dufld0i addto:dufld,0
  - register real dufld1i addto:dufld,1
  - register real dufld2i addto:dufld,2
  - register real dufld3i addto:dufld,3
  - register real dufld4i addto:dufld,4
  - register real dufld5i addto:dufld,5
  - register real poti    addto:pot onlyif:CFLX
K_FORCE:
  - register real frcxk   addto:gx
  - register real frcyk   addto:gy
  - register real frczk   addto:gz
  - register real ufld0k  addto:ufld,0
  - register real ufld1k  addto:ufld,1
  - register real ufld2k  addto:ufld,2
  - register real dufld0k addto:dufld,0
  - register real dufld1k addto:dufld,1
  - register real dufld2k addto:dufld,2
  - register real dufld3k addto:dufld,3
  - register real dufld4k addto:dufld,4
  - register real dufld5k addto:dufld,5
  - register real potk addto:pot onlyif:CFLX

SCALED_PAIRWISE_INTERACTION: |
  real xr = @xk@ - @xi@;
  real yr = @yk@ - @yi@;
  real zr = @zk@ - @zi@;
  real r2 = image2(xr, yr, zr);
  if (r2 <= off * off and incl) {
    real e, vxx, vyx, vzx, vyy, vzy, vzz;
    real e1, vxx1, vyx1, vzx1, vyy1, vzy1, vzz1;
    real pota, potb;
    real pota1, potb1;
    pair_polar_aplus_v2<Ver, ETYP, CFLX>( //
      r2, xr, yr, zr, 1, 1, //
      @ci@, @dix@, @diy@, @diz@, //
      @qixx@, @qixy@, @qixz@, @qiyy@, @qiyz@, @qizz@, //
      @uix@, @uiy@, @uiz@, @pdi@, @pti@, @ddi@, //
      @ck@, @dkx@, @dky@, @dkz@, //
      @qkxx@, @qkxy@, @qkxz@, @qkyy@, @qkyz@, @qkzz@, //
      @ukx@, @uky@, @ukz@, @pdk@, @ptk@, @ddk@, //
      f, aewald, //
      @frcxi@, @frcyi@, @frczi@, @frcxk@, @frcyk@, @frczk@, //
      @ufld0i@, @ufld1i@, @ufld2i@, @ufld0k@, @ufld1k@, @ufld2k@, //
      @dufld0i@, @dufld1i@, @dufld2i@, @dufld3i@, @dufld4i@, @dufld5i@, //
      @dufld0k@, @dufld1k@, @dufld2k@, @dufld3k@, @dufld4k@, @dufld5k@, //
      e1, vxx1, vyx1, vzx1, vyy1, vzy1, vzz1, pota1, potb1);
    pair_polar_aplus_v2<Ver, NON_EWALD, CFLX>( //
      r2, xr, yr, zr, scalec-1, scaled-1, //
      @ci@, @dix@, @diy@, @diz@, //
      @qixx@, @qixy@, @qixz@, @qiyy@, @qiyz@, @qizz@, //
      @uix@, @uiy@, @uiz@, @pdi@, @pti@, @ddi@, //
      @ck@, @dkx@, @dky@, @dkz@, //
      @qkxx@, @qkxy@, @qkxz@, @qkyy@, @qkyz@, @qkzz@, //
      @ukx@, @uky@, @ukz@, @pdk@, @ptk@, @ddk@, //
      f, aewald, //
      @frcxi@, @frcyi@, @frczi@, @frcxk@, @frcyk@, @frczk@, //
      @ufld0i@, @ufld1i@, @ufld2i@, @ufld0k@, @ufld1k@, @ufld2k@, //
      @dufld0i@, @dufld1i@, @dufld2i@, @dufld3i@, @dufld4i@, @dufld5i@, //
      @dufld0k@, @dufld1k@, @dufld2k@, @dufld3k@, @dufld4k@, @dufld5k@, //
      e, vxx, vyx, vzx, vyy, vzy, vzz, pota, potb);
    if CONSTEXPR (do_e) {
      e = e + e1;
      eptl += floatTo<ebuf_prec>(e);
      if CONSTEXPR (do_a) {
        if (e != 0 and scalec != 0)
          neptl += 1;
      }
    }
    if CONSTEXPR (do_v) {
      veptlxx += floatTo<vbuf_prec>(vxx + vxx1);
      veptlyx += floatTo<vbuf_prec>(vyx + vyx1);
      veptlzx += floatTo<vbuf_prec>(vzx + vzx1);
      veptlyy += floatTo<vbuf_prec>(vyy + vyy1);
      veptlzy += floatTo<vbuf_prec>(vzy + vzy1);
      veptlzz += floatTo<vbuf_prec>(vzz + vzz1);
    }
    if CONSTEXPR (CFLX) {
      @poti@ += (pota + pota1);
      @potk@ += (potb + potb1);
    }
  } // end if (include)
FULL_PAIRWISE_INTERACTION: |
  real xr = @xk@ - @xi@;
  real yr = @yk@ - @yi@;
  real zr = @zk@ - @zi@;
  real r2 = image2(xr, yr, zr);
  if (r2 <= off * off and incl) {
    real e, vxx, vyx, vzx, vyy, vzy, vzz;
    real pota, potb;
    pair_polar_aplus_v2<Ver, ETYP, CFLX>( //
      r2, xr, yr, zr, 1, 1, //
      @ci@, @dix@, @diy@, @diz@, //
      @qixx@, @qixy@, @qixz@, @qiyy@, @qiyz@, @qizz@, //
      @uix@, @uiy@, @uiz@, @pdi@, @pti@, @ddi@, //
      @ck@, @dkx@, @dky@, @dkz@, //
      @qkxx@, @qkxy@, @qkxz@, @qkyy@, @qkyz@, @qkzz@, //
      @ukx@, @uky@, @ukz@, @pdk@, @ptk@, @ddk@, //
      f, aewald, //
      @frcxi@, @frcyi@, @frczi@, @frcxk@, @frcyk@, @frczk@, //
      @ufld0i@, @ufld1i@, @ufld2i@, @ufld0k@, @ufld1k@, @ufld2k@, //
      @dufld0i@, @dufld1i@, @dufld2i@, @dufld3i@, @dufld4i@, @dufld5i@, //
      @dufld0k@, @dufld1k@, @dufld2k@, @dufld3k@, @dufld4k@, @dufld5k@, //
      e, vxx, vyx, vzx, vyy, vzy, vzz, pota, potb);
    if CONSTEXPR (do_e) {
      eptl += floatTo<ebuf_prec>(e);
      if CONSTEXPR (do_a) {
        if (e != 0)
          neptl += 1;
      }
    }
    if CONSTEXPR (do_v) {
      veptlxx += floatTo<vbuf_prec>(vxx);
      veptlyx += floatTo<vbuf_prec>(vyx);
      veptlzx += floatTo<vbuf_prec>(vzx);
      veptlyy += floatTo<vbuf_prec>(vyy);
      veptlzy += floatTo<vbuf_prec>(vzy);
      veptlzz += floatTo<vbuf_prec>(vzz);
    }
    if CONSTEXPR (CFLX) {
      @poti@ += pota;
      @potk@ += potb;
    }
  } // end if (include)
